<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>栖 息 地</title>
  <icon>https://wangqifei.eu.org/icon.png</icon>
  <subtitle>依据个人需求而产生的一个记录站点</subtitle>
  <link href="https://wangqifei.eu.org/atom.xml" rel="self"/>
  
  <link href="https://wangqifei.eu.org/"/>
  <updated>2023-07-01T05:05:33.985Z</updated>
  <id>https://wangqifei.eu.org/</id>
  
  <author>
    <name>Wangqifei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Immersive Translate一个好用的翻译工具</title>
    <link href="https://wangqifei.eu.org/2023/07/01/Immersive-Translate%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E8%AF%91%E5%B7%A5%E5%85%B7/"/>
    <id>https://wangqifei.eu.org/2023/07/01/Immersive-Translate%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E8%AF%91%E5%B7%A5%E5%85%B7/</id>
    <published>2023-07-01T04:54:56.000Z</published>
    <updated>2023-07-01T05:05:33.985Z</updated>
    
    <content type="html"><![CDATA[<p>AI 爆发以后，翻译工具层出不穷，优秀的翻译工具也有不少，有两个特别值得推荐的：</p><ul><li><a href="https://github.com/ripperhe/Bob">Bob</a>， 非 MAC 用户使用插件： <a href="https://github.com/openai-translator/openai-translator">openai-translator</a></li><li><a href="https://immersivetranslate.com/">Immersive Translate</a></li></ul><p>ios 版本可以选择 appsore 安装，也可通过扩展工具 Stay\injectscript 等安装，功能是一样的。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="翻译" scheme="https://wangqifei.eu.org/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Storm Sniffer的功能解锁</title>
    <link href="https://wangqifei.eu.org/2023/06/26/Storm%20Sniffer%E7%9A%84%E5%8A%9F%E8%83%BD%E8%A7%A3%E9%94%81/"/>
    <id>https://wangqifei.eu.org/2023/06/26/Storm%20Sniffer%E7%9A%84%E5%8A%9F%E8%83%BD%E8%A7%A3%E9%94%81/</id>
    <published>2023-06-26T08:31:27.000Z</published>
    <updated>2023-06-26T10:25:20.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Storm-Sniffer-网络抓包工具的-vip-功能解锁"><a href="#Storm-Sniffer-网络抓包工具的-vip-功能解锁" class="headerlink" title="Storm Sniffer 网络抓包工具的 vip 功能解锁"></a>Storm Sniffer 网络抓包工具的 vip 功能解锁</h2><ul><li><p>脚本方案：<br>主要是使用一下两个插件来试下 vip 功能：<br><a href="https://raw.githubusercontent.com/fqw000/tools/main/plugin/stormsniffer1.plugin">stormsniffer1.plugin</a><br><a href="(https://raw.githubusercontent.com/fqw000/tools/main/plugin/stormsniffer2.plugin">stormsniffer2.plugin</a><br>这里是使用 Loon 配置的插件，使用时保持插件开启在打开 stormsniffer 即可实现 vip 功能解锁。</p></li><li><p>adbk 备份文件方案<br>主要是使用会员的到处的 adbk 备份文件，在需要破解的机器上恢复备份文件实现 vip 功能，可以参考<a href="../../09/%E4%B8%80%E7%A7%8Dios%E5%86%85%E8%B4%AD%E7%9A%84%E7%A0%B4%E8%A7%A3%E5%AE%9E%E7%8E%B0/">一种 ios 内购的破解实现</a></p></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="ios" scheme="https://wangqifei.eu.org/tags/ios/"/>
    
    <category term="carck" scheme="https://wangqifei.eu.org/tags/carck/"/>
    
  </entry>
  
  <entry>
    <title>ios抓包去广告的一个操作实例演示</title>
    <link href="https://wangqifei.eu.org/2023/06/26/ios%E6%8A%93%E5%8C%85%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%9A%84%E4%B8%80%E4%B8%AA%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/"/>
    <id>https://wangqifei.eu.org/2023/06/26/ios%E6%8A%93%E5%8C%85%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%9A%84%E4%B8%80%E4%B8%AA%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/</id>
    <published>2023-06-26T02:49:58.000Z</published>
    <updated>2023-07-08T06:21:52.212Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/06/26/gKtTNQzfWOAcldB.jpg" alt="photo_2023-06-26_10-47-29.jpg"></p><h3 id="555-影视的-ios-伪装上架-app-去广告"><a href="#555-影视的-ios-伪装上架-app-去广告" class="headerlink" title="555 影视的 ios 伪装上架 app 去广告"></a>555 影视的 ios 伪装上架 app 去广告</h3><p>AppStore 上很多影视 APP 都是伪装上架，555 影视是其中之一，除了一些色情系的广告植入之外其他都还是不错的，并且支持 TV 端。这里就使用纯 ios 端演示下如何去抓包并实现去广告</p><h3 id="主要工具"><a href="#主要工具" class="headerlink" title="主要工具"></a>主要工具</h3><p>抓包工具：Storm Sniffer(小螃蟹)。其他抓包工具也同理，appstore 上抓包工具非常多。<br>重写工具：LOON,类似的网络调试工具也很多，自行选择。</p><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ul><li>开启 Storm Sniffer，打开 mitm 和 http capture</li><li>打开 555 影视，内容加载完成</li><li>关闭 http capture，打开抓取的数据，并找到疑似广告内容的数据请求，优先从图片请求中筛选更直观.</li><li>复制该 request url 的文件名，在所有请求中查找该文件名，打开筛选的请求及 response 并确认是否有含有广告内容</li><li>分析 json 数据，找出广告内容的规律：轮播广告的<code>type</code>值都是 <code>3</code>,banner 广告的 <code>layout</code>值都是<code>adbert_self</code></li><li>根据找出的规律写个 js，并将请求的 url 转换成正则。</li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Mitm]</span></span><br><span class="line"><span class="comment">hostname =a.weilai555.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[Script]</span></span><br><span class="line"><span class="comment">http-response ^https?:\/\/a\.weilai555\.com:1000\/api\/v1\/movie\/index_recommend\?pack=([\w\/\+\%]+)&amp;signature=([\w]+)$ script-path=https://raw.githubusercontent.com/fqw000/tools/main/script/555.js, requires-body=true, binary-body-mode=false, timeout=10, tag=555去广告</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> body = <span class="symbol">$respo</span>nse.body;</span><br><span class="line"><span class="keyword">var</span> obj = JSON.parse(body);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 屏蔽layout值为advert_self的项</span></span><br><span class="line"><span class="keyword">if</span> (obj.data &amp;&amp; obj.data.<span class="built_in">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> newData = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.data.<span class="built_in">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.data[i].layout !== <span class="string">&quot;advert_self&quot;</span>) &#123;</span><br><span class="line">      newData.<span class="built_in">push</span>(obj.data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  obj.data = newData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤轮播图中type为3的项</span></span><br><span class="line"><span class="keyword">if</span> (obj.data &amp;&amp; obj.data.<span class="built_in">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> carousel = obj.data.<span class="built_in">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.title === <span class="string">&#x27;轮播图&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (carousel &amp;&amp; carousel.list &amp;&amp; carousel.list.<span class="built_in">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    carousel.list = carousel.list.<span class="built_in">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.type !== <span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="symbol">$do</span>ne(&#123;<span class="attr">body</span>: JSON.stringify(obj)&#125;);</span><br></pre></td></tr></table></figure><ul><li>配置 loon，实现 rewrite。这里图方便配置成了<a href="https://raw.githubusercontent.com/fqw000/tools/main/plugin/555.plugin">555 去广告插件</a>,其他网络调试工具的配置请自行调整。</li></ul><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 555.plugin</span></span><br><span class="line"></span><br><span class="line"># <span class="number">555</span>去广告</span><br><span class="line"><span class="meta">#!name=555去广告</span></span><br><span class="line"><span class="meta">#!desc=不包含开屏广告</span></span><br><span class="line"><span class="meta">#!author=wangqifei</span></span><br><span class="line"></span><br><span class="line">[Mitm]</span><br><span class="line">hostname =a.weilai555.com</span><br><span class="line"></span><br><span class="line">[Script]</span><br><span class="line">http-response ^https?:\/\/a\.weilai555\.com:<span class="number">1000</span>\/api\/v1\/movie\/index_recommend\?pack=([\w\/\+\%]+)&amp;signature=([\w]+)$ script-path=https:<span class="comment">//raw.githubusercontent.com/fqw000/tools/main/script/555.js, requires-body=true, binary-body-mode=false, timeout=10, tag=555去广告</span></span><br></pre></td></tr></table></figure><h2 id="追加更新"><a href="#追加更新" class="headerlink" title="追加更新"></a>追加更新</h2><p>大意了这个555影视会不定期的更换域名和ip,所以以上示例的规则需要持续维护才可以。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="抓包" scheme="https://wangqifei.eu.org/tags/%E6%8A%93%E5%8C%85/"/>
    
    <category term="去广告" scheme="https://wangqifei.eu.org/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>yt-dlp一个优秀的视频下载工具</title>
    <link href="https://wangqifei.eu.org/2023/06/23/yt-dlp%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/"/>
    <id>https://wangqifei.eu.org/2023/06/23/yt-dlp%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</id>
    <published>2023-06-23T08:16:40.000Z</published>
    <updated>2023-06-23T08:37:54.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yt-dlp"><a href="#yt-dlp" class="headerlink" title="yt-dlp"></a>yt-dlp</h2><p>yt-dlp 是一个基于 youtube-dl 的命令行工具，用于下载网络视频和音频。它是 youtube-dl 的扩展版本，提供了更多的功能和选项，并且一般会更快地更新以适应视频网站的更改。除了支持 YouTube，yt-dlp 还支持许多其他视频和音频网站，包括 bilibili、 Vimeo、Dailymotion、Facebook、SoundCloud 等等。项目地址：<a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a></p><h2 id="安装及使用参考"><a href="#安装及使用参考" class="headerlink" title="安装及使用参考"></a>安装及使用参考</h2><p>使用参考：<a href="https://www.rapidseedbox.com/blog/yt-dlp-complete-guide">YT-DLP: The Complete Guide (2023)</a></p><h2 id="ios-端使用"><a href="#ios-端使用" class="headerlink" title="ios 端使用"></a>ios 端使用</h2><p>yt-dlp 在 windows、macos、linux 的安装使用以上已经介绍的非常详细了。抽时间阅读下文档基本的功能用法就可以掌握了。<br>在 ai 孙燕姿刚出来那会，个人有个需求就是在手机上下载这些 ai 孙燕姿的翻唱，毕竟在 pc 上下载再导入到手机比较繁琐。于是尝试了下在 ios 安装 yt-dlp。</p><p>ios 端需要安装 ish 或者 a-shell 等工具然后安装 yt-dlp.这里推荐 a-shell ,配置更方便些。</p><p>1.appstore 安装 a-shell。</p><p>2.安装 SW-DLT。<a href="https://routinehub.co/download/38094/">Shortcuts</a></p><p>3.运行 SW-DLT.注意首次运行需要设置 delete all –&gt; true 删除所有的 depends，然后设置 delete all –&gt; false 再运行更新 depends。（需要注意 a-shell 软件源的连通性）</p><p>4.运行 SW-DLT 使用功能(至少一次，确保 depens 安装正确)，或者在 a-shell 里使用命令运行 dy-dlp。</p><p>5.下载后的文件在 files-on My iphone - a-Shell 里。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="工具" scheme="https://wangqifei.eu.org/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>华为Mate30 Pro安装Google框架</title>
    <link href="https://wangqifei.eu.org/2023/06/20/Pro%E5%AE%89%E8%A3%85google%E6%A1%86%E6%9E%B6/"/>
    <id>https://wangqifei.eu.org/2023/06/20/Pro%E5%AE%89%E8%A3%85google%E6%A1%86%E6%9E%B6/</id>
    <published>2023-06-20T03:30:53.000Z</published>
    <updated>2023-06-20T03:45:27.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="华为-x2F-荣耀-HMS-系手机安装-GMS-及-googleplay"><a href="#华为-x2F-荣耀-HMS-系手机安装-GMS-及-googleplay" class="headerlink" title="华为&#x2F;荣耀 HMS 系手机安装 GMS 及 googleplay"></a>华为&#x2F;荣耀 HMS 系手机安装 GMS 及 googleplay</h2><h3 id="开动前准备工装"><a href="#开动前准备工装" class="headerlink" title="开动前准备工装"></a>开动前准备工装</h3><p>1.确保手机无谷歌残留。打开应用管理（显示系统程序），搜索 google，如有，卸载。（提示：部分需要在设备管理器里解除相应的激活后卸载，以免卸载异常。）</p><p>2.下载文件包，包括 google 系及谷歌服务助手恢复文件。（助手功能已残，这里仅使用其激活功能。）所有文件已上传阿里云,需要在华为应用商店才能彻底卸载。</p><ul><li><a href="https://github.com/fqw000/huawei/releases/download/Googleframe/A.zip">huawei.zip</a>: 下载备份文件，用于安装谷歌服务助手便于激活。</li><li>0.apk: MicroG-Huawei fix eloygomezTV 0.2.12.203315-dirty (com.google.android.gms version:203315025)</li><li>1.apk: google 服务框架 10 (com.google.android.gsf version:29)</li><li>2.apk: googleplay 服务 17.8.57 (com.google.android.gms version:17857037)</li><li>3.apk: googleplay 商店 19.5.13-all[0][pr]303545793 (com.android.vending version:81951300)</li><li>4.apk: google 帐户管理程序 4.4.4-1227136 (com.google.android.gsf.login version:19)</li><li>5.apk: googleplay 服务 20.24.14[120408-319035315] (com.google.android.gms version:202414033)</li></ul><p>3.自备梯子。</p><p>4.关闭应用分身</p><p>5.关闭 google 账号的两部验证</p><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="严格按照步骤操作"><a href="#严格按照步骤操作" class="headerlink" title="严格按照步骤操作"></a>严格按照步骤操作</h3><p>1.解压缩文件包。</p><p>使用自带文件管理工具解压，解压缩路径修改为 我的手机 ！！！！，解压后的文件夹内的 Huawei.zip 解压到默认路径，不要动！<br>异常处理：解压路径不对会导致下一步操作找不到 从内部存储恢复 选项！！！</p><p>2.使用备份恢复功能安装谷歌服务助手。</p><ul><li>调整系统时间为 2020 年 5 月（必要，否则出现异常！）</li><li>使用备份和恢复功能，点击右上角找到 从内部存储恢复 ，如果没有这个选项： 合适上一步文件解压路径是否完全正确！从新进入备份和恢复选项。</li><li>选择备份文件打开，勾选应用+数据。<br>异常处理：华为升级了备份软件，新版修正了部分功能，很多教程是告诉你 pc 端 adb 卸载掉 com.huawei.Backup，然后安装旧版本的备份软件，没有错，但是失效了，华为做了修正，安装旧版后系统会提示你版本低不能使用备份和恢复功能，可以使用 Hisuite 恢复备份，但是打开谷歌服务助手会出现 网络链接异常 的提示。主要是只恢复了应用，没有能恢复数据。</li><li>打开谷歌服务助手-激活，提示始终允许确认</li><li>恢复系统时间</li></ul><h3 id="从这里开始一下操作要全程挂梯子，包括过程中重启手机后。"><a href="#从这里开始一下操作要全程挂梯子，包括过程中重启手机后。" class="headerlink" title="从这里开始一下操作要全程挂梯子，包括过程中重启手机后。"></a>从这里开始一下操作要全程挂梯子，包括过程中重启手机后。</h3><p>3.开始安装。</p><ul><li>安装 0.apk: MicroG-Huawei fix eloygomezTV 0.2.12.203315-dirty<br>安装后打开登录 google 账号<br>异常处理：此处要把使用的账号都登录了，如果有多个账号的话。之后就不能再添加了！！<ul><li>依次安装 1.apk: google 服务框架 10 、3.apk: googleplay 商店 19.5.13-all[0][pr]303545793 、4.apk: google 帐户管理程序 4.4.4-1227136</li><li>卸载 MicroG</li><li>安装 2.apk: googleplay 服务 17.8.57</li><li>异常处理：安装后通知栏会不停的出现错误通知，不要管，安装后要等这个报错出现。</li><li>打开 play 商店，这里应该是已经可以运行了，然后关闭 play 商店后台</li><li>打开应用管理（显示系统程序），搜索 google：<br>*paly-强制停止<br>*谷歌账户管理程序-强制停止-删除数据<br>*谷歌服务框架-强制停止-清空缓存-删除数据<br>*重启手机</li><li>安装 2.apk: googleplay 服务 17.8.57,之后直接重启手机</li><li>打开 play 商店，确认运行后关闭后台</li><li>应用程序管理找到 play 服务-删除所有数据-确定-强行停止（如果没显示灰色，多点击几次，务必确认按钮变灰色）-卸载</li><li>安装 5.apk: googleplay 服务 20.24.14[120408-319035315]，重启手机</li><li>测试 play 商店是否正常运行，功能是否正常</li><li>如异常，回滚以上步骤后重来！！</li><li>卸载无关程序：谷歌账户管理、谷歌服务助手。</li></ul></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="huawei" scheme="https://wangqifei.eu.org/tags/huawei/"/>
    
  </entry>
  
  <entry>
    <title>openwrt定时更新host文件的方案</title>
    <link href="https://wangqifei.eu.org/2023/06/14/openwrt%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0host%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%A1%88/"/>
    <id>https://wangqifei.eu.org/2023/06/14/openwrt%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0host%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%A1%88/</id>
    <published>2023-06-14T09:58:42.000Z</published>
    <updated>2023-06-14T10:16:56.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>openwrt 安装以后一直没办法解决 github DNS 污染的问题，raw 和 github 图片都不能访问，导致大量的文件不能更新，或者只能访问凭运气。于是就需要配置 github 的 host 来解决 DNS 污染，写了个脚本来实现。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>备份现有 host 文件到 hosts_origin(注意如无则新建，如有则覆盖)，并调整本分文件权限</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/etc/</span>hosts <span class="regexp">/etc/</span>hosts_origin</span><br><span class="line">chmod <span class="number">664</span> <span class="regexp">/etc/</span>hosts_origin</span><br></pre></td></tr></table></figure><ul><li>在 root 目录下新建 hostsUpdate.sh 文件</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/bin/sh</span></span><br><span class="line">wget -q https:<span class="regexp">//</span>hosts.gitcdn.top<span class="regexp">/hosts.txt -O /</span>tmp/hostsNew.txt --no-check-certificate</span><br><span class="line">cat <span class="regexp">/tmp/</span>hostsNew.txt <span class="regexp">/etc/</span>hosts_origin &gt; <span class="regexp">/tmp/</span>hostsNewAll.txt</span><br><span class="line">cp <span class="regexp">/tmp/</span>hostsNewAll.txt <span class="regexp">/etc/</span>hosts</span><br><span class="line">chmod <span class="number">664</span> <span class="regexp">/etc/</span>hosts</span><br><span class="line"><span class="regexp">/etc/i</span>nit.d/dnsmasq restart</span><br></pre></td></tr></table></figure><ul><li>修改 hostsUpdate.sh 文件权限</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">chmod</span> <span class="number">777</span> hostsUpdate.sh</span><br></pre></td></tr></table></figure><ul><li>执行 hostsUpdate.sh 文件</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/root/</span>hostsUpdate.sh</span><br></pre></td></tr></table></figure><ul><li>设置定时任务<br>在 openwrt 中添加定时任务，保存定时任务后在系统启动项中重启 cron。<br>每天 3 点定时更新</li></ul><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">3</span> * * * /root/update_hosts.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="openwrt" scheme="https://wangqifei.eu.org/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>快柠檬的节点提取和转换</title>
    <link href="https://wangqifei.eu.org/2023/06/09/%E5%BF%AB%E6%9F%A0%E6%AA%AC%E7%9A%84%E8%8A%82%E7%82%B9%E6%8F%90%E5%8F%96%E5%92%8C%E8%BD%AC%E6%8D%A2/"/>
    <id>https://wangqifei.eu.org/2023/06/09/%E5%BF%AB%E6%9F%A0%E6%AA%AC%E7%9A%84%E8%8A%82%E7%82%B9%E6%8F%90%E5%8F%96%E5%92%8C%E8%BD%AC%E6%8D%A2/</id>
    <published>2023-06-09T09:09:35.000Z</published>
    <updated>2023-06-10T09:35:13.002Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>测试 lemon 使用，过度依赖现有运行规则，随时会失效，不保证维护。<br>这里只是探索功能实现的技术记录，谢绝传播使用。</p></blockquote><p>鉴于 Clash 的完善，目前对各平台的良好支持，一个配置全平台通用的便利让我不的不考虑全面转战 Clash。<br>对个人而言：折腾 &gt; 使用 。</p><blockquote><p><a href="https://github.com/fqw000/lemon">项目地址</a></p></blockquote><h3 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h3><ul><li>通过提取快柠檬客户端 v2rayNG 的订阅链接通过 shortcuts 自动更新到 lemon.site</li><li><a href="https://raw.githubusercontent.com/fqw000/lemon/main/.github/workflows/extract_lemon_list.yml">extract-lemon-list.yml</a> 中没有加入异常处理机制，为确保运行正常，务必确保 lemon.site 文件内容为单行网址且仅有单行，<del>shortcuts 里有处理自动提交时可忽略该问题</del>（目前在写 shortcuts 的过程中遇到了不能正常使用 github api 异常还没解决）。</li><li>触发 GithubAction <a href="https://raw.githubusercontent.com/fqw000/lemon/main/.github/workflows/extract_lemon_list.yml">extract-lemon-list.yml</a><ul><li>每 3 个小时自动更新一次</li><li>读取 lemon.site 内的订阅链接网址对应的内容</li><li>将网址内容同步至 lemon.sub，解决 v2ray 订阅</li><li>对 lemon.sub 进行解码同步至 lemon.list，解决 loon 订阅</li><li>修改 lemon.site 读取的链接网址为客户端提供的 Clash 的订阅网址，并读取 clash 订阅到 lemon.yaml</li><li>提取 clash 订阅内的 proxies 内容到 lemonnode.yaml</li><li>使用 lemonlite.yaml 保存 clash 订阅内的 proxies 内容，并与 lemonbanner.yaml 合并到 lemonliste.yaml 形成一个完整的自定义订阅内容</li><li>注：lemonbanner.yaml 内容为代理集和规则集合。</li></ul></li><li>不是最优解，只是能用。</li><li>附 <a href="https://raw.githubusercontent.com/fqw000/lemon/main/.github/workflows/extract_lemon_list.yml">extract-lemon-list.yml</a> 参考</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">name: extract_lemon_list</span><br><span class="line">on:</span><br><span class="line">  schedule:</span><br><span class="line">    - cron: <span class="string">&#x27;0 */3 * * *&#x27;</span></span><br><span class="line">  push:</span><br><span class="line">    branches: [ main ]</span><br><span class="line">    path:</span><br><span class="line">      - <span class="string">&quot;lemon.site&quot;</span></span><br><span class="line"><span class="built_in">jobs</span>:</span><br><span class="line">  read-and-save:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: Checkout code</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">    - name: Read and save content</span><br><span class="line">      run: |</span><br><span class="line">          url=$(<span class="built_in">cat</span> lemon.site)</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;url=<span class="variable">$url</span>&quot;</span> &gt;&gt; <span class="variable">$GITHUB_ENV</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; lemon.sub</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; lemon.list</span><br><span class="line">          curl -L <span class="string">&quot;<span class="variable">$url</span>&quot;</span> -o lemon.sub</span><br><span class="line">          <span class="built_in">cat</span> lemon.sub | <span class="built_in">base64</span> -d &gt; lemon.list</span><br><span class="line"></span><br><span class="line">          url2=$(<span class="built_in">cat</span> lemon.site | sed <span class="string">&#x27;s/vrn/ch/g&#x27;</span>)</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;url2=<span class="variable">$url2</span>&quot;</span> &gt;&gt; <span class="variable">$GITHUB_ENV</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; lemon.yaml</span><br><span class="line">          curl -L <span class="string">&quot;<span class="variable">$url2</span>&quot;</span> -o lemon.yaml</span><br><span class="line"></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; lemonlite.yaml</span><br><span class="line">          <span class="built_in">cat</span> lemon.yaml | perl -ne <span class="string">&#x27;print unless /^proxy-group/../^$/&#x27;</span> &gt; lemonlite.yaml</span><br><span class="line">          <span class="built_in">cat</span> lemonlitebanner.yaml &gt;&gt; lemonlite.yaml</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; lemonnode.yaml</span><br><span class="line">          <span class="built_in">cat</span> lemon.yaml | perl -ne <span class="string">&#x27;print unless /^proxy-group/../^$/&#x27;</span> &gt; lemonnode.yaml</span><br><span class="line"></span><br><span class="line">    - name: Commit changes</span><br><span class="line">      run: |</span><br><span class="line">        git config --<span class="built_in">local</span> user.email <span class="string">&quot; &quot;</span></span><br><span class="line">        git config --<span class="built_in">local</span> user.name <span class="string">&quot; &quot;</span></span><br><span class="line">        git add lemon.sub lemon.list lemon.yaml lemonlite.yaml lemonnode.yaml</span><br><span class="line">        git commit -m <span class="string">&quot;Add lemon.sub lemon.list lemon.yaml lemonlite.yaml lemonnode.yaml&quot;</span></span><br><span class="line">        git push</span><br></pre></td></tr></table></figure><h2 id="关于-github-action-的坑，萌新关注。"><a href="#关于-github-action-的坑，萌新关注。" class="headerlink" title="关于 github action 的坑，萌新关注。"></a>关于 github action 的坑，萌新关注。</h2><ul><li>涉及到文件提交等操作，需要在 repo 设置里代开 action 的读写权限,否则会面临提价失败。即使你是 owner</li><li><blockquote><p>setting-Actions-General-workflow permissions-打开 read and write permissions</p></blockquote></li></ul><h2 id="lemonlite-yaml"><a href="#lemonlite-yaml" class="headerlink" title="lemonlite.yaml"></a><del>lemonlite.yaml</del></h2><p><del>这里使用的是黑名单机制，gfw 列表走代理，其余 DIRECT,只是对 spotify 和 telegram 单独分流。<br>没有涉及任何去广告和 script 操作，去广告交给了 AdgurandHome 和 adbyby.</del></p><h2 id="lemon-usr-yaml"><a href="#lemon-usr-yaml" class="headerlink" title="lemon-usr.yaml"></a><a href="https://raw.githubusercontent.com/fqw000/lemon/main/lemon-usr.yaml">lemon-usr.yaml</a></h2><p>舍弃了<del>lemonlite.yaml</del>.使用了代理集和规则集的引用，只是使用了 <a href="https://raw.githubusercontent.com/fqw000/lemon/main/.github/workflows/extract_lemon_list.yml">extract-lemon-list.yml</a> 生成的 lemonnode.yaml 代理集文件。舍弃了没有代理集时的其他繁琐的实现操作。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="科学上网" scheme="https://wangqifei.eu.org/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>联系人信息跨设备即时同步的实现方案</title>
    <link href="https://wangqifei.eu.org/2023/06/09/%E8%81%94%E7%B3%BB%E4%BA%BA%E4%BF%A1%E6%81%AF%E8%B7%A8%E8%AE%BE%E5%A4%87%E5%8D%B3%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/"/>
    <id>https://wangqifei.eu.org/2023/06/09/%E8%81%94%E7%B3%BB%E4%BA%BA%E4%BF%A1%E6%81%AF%E8%B7%A8%E8%AE%BE%E5%A4%87%E5%8D%B3%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</id>
    <published>2023-06-09T08:01:18.000Z</published>
    <updated>2023-06-09T08:14:39.234Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/06/09/Zy84RqI1k2a7tsE.png" alt="image.png"></p><blockquote><p>需求：各终端数据即时同步，换设备使用时不用来回导通讯录</p></blockquote><h2 id="实现方案："><a href="#实现方案：" class="headerlink" title="实现方案："></a><strong>实现方案：</strong></h2><p><strong>DAVx⁵+iCloud</strong></p><p><a href="https://www.davx5.com/">CalDAV, CardDAV and WebDAV for Android — DAVx⁵</a></p><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a><strong>效果：</strong></h2><p>Android、ios、Mac 端保持联系人随时同步（新增和删除均可），不限设备数量，项目开源。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项：</strong></h2><p>这里需要在 icloud 里生成专用密码授权登录，不是使用 icloud 的登录密码！！！</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="ios" scheme="https://wangqifei.eu.org/tags/ios/"/>
    
    <category term="anroid" scheme="https://wangqifei.eu.org/tags/anroid/"/>
    
  </entry>
  
  <entry>
    <title>一种ios内购的破解实现</title>
    <link href="https://wangqifei.eu.org/2023/06/09/%E4%B8%80%E7%A7%8Dios%E5%86%85%E8%B4%AD%E7%9A%84%E7%A0%B4%E8%A7%A3%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wangqifei.eu.org/2023/06/09/%E4%B8%80%E7%A7%8Dios%E5%86%85%E8%B4%AD%E7%9A%84%E7%A0%B4%E8%A7%A3%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-06-09T07:41:57.000Z</published>
    <updated>2023-06-09T07:57:42.310Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/06/09/ES1mkFLO6RrQpZf.png" alt="image.png"></p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>通过将内购信息 adbk 备份文件导入非解锁内购的个人 Apple ID 下载的本应用内，实现内购信息与个人 Apple ID 的绑定，再通过应用数据的备份与还原功能实现在不能使用 Apps Manger 的 ios 设备上还原备份信息，实现内购的破解。</p><h2 id="步骤描述"><a href="#步骤描述" class="headerlink" title="步骤描述"></a>步骤描述</h2><ul><li>使用 Apps Manger 将已经内购的应用的内购信息备份成 adbk 文件。你也可以从网络等其他途径获得应用的 adbk 文件。</li><li>使用个人 Apple ID 下载该应用。</li><li>使用 Apps Manger 将含有内购信息的 adbk 文件还原到下载的应用。</li><li>使用 iMazing 将该应用数据备份导出。</li><li>使用 iMazing 在没有 Apps Manger 的任意版本号的设备（即使是 15.4.1 以上的系统也 OK）上将导出的应用宝数据备份还原。</li></ul><p>❗️ 对于需要绑定设备 ID 或者 icloud 的应用不要有太大的期待。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果您不确定如何操作，建议先了解相关知识并备份好数据，以免出现意外情况。同时，<strong>这里只验证可行性</strong>，也要注意不要滥用内购恢复功能，尊重开发者的劳动成果并支持正版软件。👍</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="ios" scheme="https://wangqifei.eu.org/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>小米电视调用原声安卓设置</title>
    <link href="https://wangqifei.eu.org/2023/06/08/%E5%B0%8F%E7%B1%B3%E7%94%B5%E8%A7%86%E8%B0%83%E7%94%A8%E5%8E%9F%E5%A3%B0%E5%AE%89%E5%8D%93%E8%AE%BE%E7%BD%AE/"/>
    <id>https://wangqifei.eu.org/2023/06/08/%E5%B0%8F%E7%B1%B3%E7%94%B5%E8%A7%86%E8%B0%83%E7%94%A8%E5%8E%9F%E5%A3%B0%E5%AE%89%E5%8D%93%E8%AE%BE%E7%BD%AE/</id>
    <published>2023-06-08T09:41:29.000Z</published>
    <updated>2023-06-20T03:26:58.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>占个坑，慢慢补</p></blockquote><p>前期的版本内还有隐藏的原生setting，目前的版本均已经阉割彻底。只是，安装对应版本的原生setting即可直接调用，务必注意版本要对应，否则会出现无法打开。</p><h2 id="为什么需要原生setting"><a href="#为什么需要原生setting" class="headerlink" title="为什么需要原生setting"></a>为什么需要原生setting</h2><p>当然是为了完善的设置选项，比如网络配置的自定义等，根据个人需求选择。</p><h2 id="去哪里找原生setting"><a href="#去哪里找原生setting" class="headerlink" title="去哪里找原生setting"></a>去哪里找原生setting</h2>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="电视盒子" scheme="https://wangqifei.eu.org/tags/%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>MiTV更换Launcher</title>
    <link href="https://wangqifei.eu.org/2023/06/08/MiTV%E6%9B%B4%E6%8D%A2Launcher/"/>
    <id>https://wangqifei.eu.org/2023/06/08/MiTV%E6%9B%B4%E6%8D%A2Launcher/</id>
    <published>2023-06-08T09:26:38.000Z</published>
    <updated>2023-06-08T09:40:54.324Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需求：纯净的电视操作和观影体验。</p></blockquote><h2 id="实现方案："><a href="#实现方案：" class="headerlink" title="实现方案："></a><strong>实现方案：</strong></h2><p>ADB+bat 脚本+lenbacklauncher+emotn</p><p><a href="https://developer.android.com/tools/adb">Android Debug Bridge (adb)  |  Android Studio  |  Android Developers</a></p><p><a href="https://github.com/tsynik/LeanbackLauncher/releases">Releases · tsynik&#x2F;LeanbackLauncher</a></p><p><a href="https://github.com/fqw000/tv/blob/main/%E5%B0%8F%E7%B1%B3%E7%94%B5%E8%A7%86%E7%B2%BE%E7%AE%80.bat">tv&#x2F;小米电视精简.bat at main · fqw000&#x2F;tv</a></p><p><a href="https://app.emotn.com/"></a></p><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a><strong>效果</strong>：</h2><p>原生 AndroidTV 桌面替换小米桌面并删除各种 mi 服务，启动速度快、无广告，可安装网络工具、netflix、smartTube、HdoBOX、TVBox、秒看直播、BBLL（B 站客户端）、AdguradPro（没有去广告的网络环境可以安装）等。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>开启小米电视（盒子）开发者模式。</li><li>打开开启 ADB。</li><li><strong>安装第三方 Launcher 软件</strong> 删除自带 launcher 前务必确保第三方 Launcher 以安装并测试能正常运行。</li><li>建立 adb 连接，可以使用双母口 USB(没有的可以自己使用两条 usb 线改造下)，Win 端执行一键脚本，根据提示配置即可。</li><li>也可是使用 adb wifi 连接工具比如<strong>甲壳虫 adb</strong>，adb 连接以后逐条执行 bat 内的命令。</li></ul><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项：</strong></h2><p>此 bat 文件操作会删除小米原有大部分服务，慎重原则，恢复需要重置电视。如不想更改原有系统，可选择使用按键映射软件将 home 键映射到对应的 launcher 即可。</p><h2 id="附上根据个人需求写的一键脚本-bat-文件"><a href="#附上根据个人需求写的一键脚本-bat-文件" class="headerlink" title="附上根据个人需求写的一键脚本 bat 文件"></a>附上根据个人需求写的一键脚本 bat 文件</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">chcp <span class="number">936</span></span><br><span class="line">:: 修改文字颜色</span><br><span class="line">color a</span><br><span class="line"></span><br><span class="line">:: title</span><br><span class="line">title 小米电视<span class="number">1.3</span>.<span class="number">85</span>(稳定版）精简</span><br><span class="line">echo 小米电视<span class="number">1.3</span>.<span class="number">85</span>(稳定版）精简</span><br><span class="line">echo <span class="number">2021</span>-<span class="number">11</span>-<span class="number">13</span></span><br><span class="line">echo by 王奇飞</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">::adb 版本</span><br><span class="line">echo adb版本号：</span><br><span class="line">adb <span class="keyword">version</span></span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo <span class="comment">###开始设备连接##。</span></span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">::连接电视（更换为自己的地址）请输入</span><br><span class="line">set /p <span class="attr">ipinput=</span>请输入目标电视ip地址:</span><br><span class="line">echo.</span><br><span class="line">echo 输入的ip地址为: %ipinput%</span><br><span class="line">echo.</span><br><span class="line">set /p <span class="attr">portinput=</span>请输入目标电视adbd监听端口:</span><br><span class="line">echo.</span><br><span class="line">echo 输入的监听端口为: %portinput%</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">::adb connect %ipinput%:%portinput% &gt;linkreturn.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::findstr <span class="string">&quot;cannot&quot;</span> linkreturn.txt &gt;nul &amp;&amp;(goto end)||(goto <span class="literal">start</span>)</span><br><span class="line"></span><br><span class="line">:<span class="literal">start</span></span><br><span class="line">adb connect %inimput%:%portinput%</span><br><span class="line">::echo 确认连接设备信息：</span><br><span class="line">adb devices</span><br><span class="line">::pause</span><br><span class="line">echo 开始精简系统</span><br><span class="line"></span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.mipay.wallet.tv</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.mitv.alarmcenter</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.mitv.gallery</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.mitv.screensaver</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.miui.systemAdSolution</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.miui.tv.analytics</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.sogou.speech.offlineservice</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.devicereport</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mibox.gamecenter</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mibox.lockscreen</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.miplay</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.appstore</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.handbook</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.karaoke.service</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.pay</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.tvpush.tvpushservice</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.screenrecorder</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.smarthome.tv</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.voicecontrol</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.android.captiveportallogin</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.android.providers.downloads</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.gamecenter.sdk.service.mibox</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mimusic2</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.payment</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.shop</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.mitv.upgrade</span><br><span class="line">adb shEll pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.statistic</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.tv.appupgrade</span><br><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> com.xiaomi.tv.gallery</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo 任意键退出</span><br><span class="line">pause</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">:::end</span><br><span class="line">::<span class="keyword">type</span> linkreturn.txt</span><br><span class="line">::echo 连接故障。任意键退出</span><br><span class="line">::pause</span><br><span class="line">::rem exit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="电视盒子" scheme="https://wangqifei.eu.org/tags/%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>推荐一个MicrosoftStore抓包下载的在线工具</title>
    <link href="https://wangqifei.eu.org/2023/06/08/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AAMicrosoftStore%E6%8A%93%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
    <id>https://wangqifei.eu.org/2023/06/08/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AAMicrosoftStore%E6%8A%93%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/</id>
    <published>2023-06-08T09:03:00.000Z</published>
    <updated>2023-06-08T09:06:16.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Online-link-generator-for-Microsoft-Store"><a href="#Online-link-generator-for-Microsoft-Store" class="headerlink" title="Online link generator for Microsoft Store"></a>Online link generator for Microsoft Store</h2><p>因为串口调试工具只在 MicrosoftStore 提供，好巧不巧我安装的 tiny win10 没有，于是翻到了这个在线工具：</p><p><a href="https://store.rg-adguard.net/">抓包 MicrosoftStore</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="windows" scheme="https://wangqifei.eu.org/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>360T7刷OpenWrt</title>
    <link href="https://wangqifei.eu.org/2023/06/08/360T7%E5%88%B7OpenWrt/"/>
    <id>https://wangqifei.eu.org/2023/06/08/360T7%E5%88%B7OpenWrt/</id>
    <published>2023-06-08T08:44:11.000Z</published>
    <updated>2023-06-08T09:22:59.674Z</updated>
    
    <content type="html"><![CDATA[<p>使用 360T7 刷入 openwrt 系统，主要借助 openclash、adguradhome 实现 <del>科 学 上 网</del>和 DNS 去广告。手搓了一份 clsh 的配置文件，但是配置中发现 openclash 不支持 reality，改用了 passwall。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a><strong>准备</strong></h2><table><thead><tr><th>360T7</th><th></th></tr></thead><tbody><tr><td>windows 电脑</td><td>本操作均是基于 window 端</td></tr><tr><td>usb 转 ttl 工具</td><td>CH340 即可，电商网站很多</td></tr><tr><td>杜邦线+网线</td><td></td></tr><tr><td>uboot</td><td><a href="https://github.com/fqw000/360T7/releases/download/openwrt/mt7981_360t7-fip-fixed-parts-uboot.bin">108m 的 uboot</a> \ <a href="https://cmi.hanwckf.top/p/360t7-firmware/">来源</a></td></tr><tr><td>openwrt 固件</td><td><a href="https://github.com/fqw000/360T7/releases/download/openwrt/360t7.chajian-openwrt.zip">固件下载</a> \ <a href="https://www.right.com.cn/forum/thread-8263340-1-1.html">来源</a></td></tr><tr><td>串口调试助手</td><td>MicrosoftStore \ <a href="https://github.com/fqw000/360T7/releases/download/openwrt/chuankoutiaoshiyilai-Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__.appx">依赖</a> 、 <a href="https://github.com/fqw000/360T7/releases/download/openwrt/chuankoutiaoshiyilai-Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__.appx">依赖</a> 、 <a href="https://github.com/fqw000/360T7/releases/download/openwrt/chuankoutiaoshizhushou-lingguang.8.0.1.0.msixbundle">串口调试助手</a></td></tr><tr><td>termius</td><td>telnet 工具都可以</td></tr></tbody></table><p><em>部分没有 microsoftstore 的版本比如企业版，使用抓包的.appx 和.msixbundle 安装串口调试助手</em> <a href="../%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AAMicrosoftStore%E6%8A%93%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/">推荐一个 MicrosoftStore 抓包下载的在线工具</a></p><h2 id="拆机"><a href="#拆机" class="headerlink" title="拆机"></a><strong>拆机</strong></h2><p>网上流传很多拆机教程，图文的、视频的都有自行参考吧<br> 以下是拆机的关键点：</p><ul><li>贴纸覆盖下的两颗十字螺丝拆解。想保护贴纸的就用风枪或者吹风机吹下把贴纸私下里。</li><li>准备一张废弃的塑料卡片（比如：过期的信用卡、会员卡），从底部中央插入，想一侧滑动，碰到卡口向上撬卡，使上盖向外，下盖向里滑动，依次撬开四个角和两侧的卡口，正上方的两个卡口不好撬，其实不用撬，以顶为轴心从底部上掀上盖，正上方两卡口即可脱落</li><li>绞和方式为底盖卡牙靠外侧向内扣紧上盖卡扣，上盖卡扣靠内测。</li><li>基本都能无损不断扣拆解</li></ul><h2 id="failsafe-模式下开启-telnet"><a href="#failsafe-模式下开启-telnet" class="headerlink" title="failsafe 模式下开启 telnet"></a><strong>failsafe 模式下开启 telnet</strong></h2><ul><li>使用 usb 转 ttl 工具+杜邦线接线：路由 RXD 连接 ttl 工具的 TXD、TXD 连接 RXD、GND 连接 GND.底座朝下，主板由下方三个节点自下而上依次为 RXD、TXD、GND。<br>注意观察路由主板，三个圆孔一个方孔，三个圆孔没有走线的孔（与方孔相临）为 GND,紧挨着 GND 有走线的一个圆孔为 TXD,另外一个圆孔则是 RXD。</li><li>打开串口调试助手,串口号选择插入 COM 口设备，波特率选择到 115200，然后选择连接。</li><li>路由器接通电源，调试助手右侧开始日志开始显示，不停的输入 f+回车 发送，直至显示进入 failsafe 模式。</li><li>依次执行以下命令<br>&amp;darr; 开启 uboot 控制台菜单<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fw_setenv</span> bootmenu_delay <span class="number">3</span></span><br></pre></td></tr></table></figure>&amp;darr;挂载 rootfs 并开启 telnet<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount_root</span><br><span class="line">sed -i <span class="string">&#x27;s/.*local debug=.*/\tlocal debug=1/&#x27;</span> <span class="regexp">/etc/i</span>nit.d/telnet</span><br></pre></td></tr></table></figure>&amp;darr;修改 root 密码为 password<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br><span class="line"><span class="keyword">password</span></span><br><span class="line"><span class="keyword">password</span></span><br></pre></td></tr></table></figure>&amp;darr;重启<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">reboot</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="刷入-uboot"><a href="#刷入-uboot" class="headerlink" title="刷入 uboot"></a><strong>刷入 uboot</strong></h2><ul><li>路由重启后，进入并配置路由，确保路由能够联网（如果需要从网络下载 uboot 文件，你也可以将 uboot 文件使用 HSF、SCP 等方式直接上传到路由使用），原厂的 uboot 只能使用 36M，hanwckf 的可以使用 108M。</li><li>使用 termius 对路由器进行 telnet 连接，默认的后台地址是 192.168.2.1，用户名是 root，密码是 password（这就是上一步修改的密码）</li><li>将 uboot 写入 &#x2F;tmp&#x2F; 路径，将 360t7-fip-fixed-parts.bin 文件中的数据写入到 Linux 内核中名为 fip 的 MTD 设备分区中。当然你也可以使用 mtd 命令写入刚下载好的 uboot。</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /tmp</span><br><span class="line">wget https://sebs.oss-<span class="keyword">cn</span>-shanghai.aliyuncs.<span class="keyword">com</span>/<span class="number">360</span>t7-fip-fixed-parts.bin</span><br><span class="line">mtd <span class="keyword">write</span> <span class="number">360</span>t7-fip-fixed-parts.bin fip</span><br></pre></td></tr></table></figure><h2 id="刷入-openwrt"><a href="#刷入-openwrt" class="headerlink" title="刷入 openwrt"></a><strong>刷入 openwrt</strong></h2><ul><li>进入 uboot<br>摁住路由 reset 按键，通电，持续 8 秒以上松开即可进入 reboot</li><li>uboot 没有 DHCP，所有需要使用网线将路由的 lan 口和电脑连接。<br>电脑端：<br>IP 手动设置为 192.168.1.2<br>子网掩码 255.255.255.0<br>网关设置 192.168.1.1<br>dns 也设置 192.168.1.1</li><li>浏览器打开 192.168.1.1 进入 uboot 管理页面，选择下载好的 openwrt 固件，注意文件格式需要为.bin 不能使压缩包</li><li>刷入完成后，自动重启进入 openwrt<br>默认后台是 192.168.6.1，用户名是 root，密码 password，默认的 Wi-Fi 名是 mtk 开头的，默认 Wi-Fi 没有密码</li></ul><h2 id="最后附上-360t7-的-原生固件备份"><a href="#最后附上-360t7-的-原生固件备份" class="headerlink" title="最后附上 360t7 的  原生固件备份 "></a>最后附上 360t7 的 <a href="https://github.com/fqw000/360T7/releases/download/openwrt/360T7-yuanshengrom-bak.7z"> 原生固件备份 </a></h2><h3 id="原厂固件分区表"><a href="#原厂固件分区表" class="headerlink" title="原厂固件分区表"></a>原厂固件分区表</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">0x000000000000</span>-<span class="number">0</span>x000000100000 : <span class="string">&quot;bl2&quot;</span></span><br><span class="line"><span class="attribute">0x000000100000</span>-<span class="number">0</span>x000000180000 : <span class="string">&quot;u-boot-env&quot;</span></span><br><span class="line"><span class="attribute">0x000000180000</span>-<span class="number">0</span>x000000380000 : <span class="string">&quot;Factory&quot;</span></span><br><span class="line"><span class="attribute">0x000000380000</span>-<span class="number">0</span>x000000580000 : <span class="string">&quot;fip&quot;</span></span><br><span class="line"><span class="attribute">0x000000580000</span>-<span class="number">0</span>x000002980000 : <span class="string">&quot;ubi&quot;</span></span><br><span class="line"><span class="attribute">0x000002980000</span>-<span class="number">0</span>x000004d80000 : <span class="string">&quot;firmware-1&quot;</span></span><br><span class="line"><span class="attribute">0x000004d80000</span>-<span class="number">0</span>x000007180000 : <span class="string">&quot;plugin&quot;</span></span><br><span class="line"><span class="attribute">0x000007180000</span>-<span class="number">0</span>x000007280000 : <span class="string">&quot;config&quot;</span></span><br><span class="line"><span class="attribute">0x000007280000</span>-<span class="number">0</span>x000007300000 : <span class="string">&quot;factory&quot;</span></span><br><span class="line"><span class="attribute">0x000007300000</span>-<span class="number">0</span>x000007a00000 : <span class="string">&quot;log&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>其中，Factory 为无线 EEPROM 分区；fip 为 uboot 分区；ubi 和 firmware-1 为固件分区，分别 36M，均为 ubi 格式；plugin 为原厂插件分区，有 36M，也是 ubi 格式；最后一个小写字母开头的 factory 分区为原厂固件信息分区，保存有机器编号，MAC 地址等信息。<br>原厂 uboot 在开机时会分别检查 ubi 和 firmware-1 分区内是否存在固件，如果某个分区未检查通过，则 uboot 会自动将另一个分区的内容复制过去。<br>因此，当使用原厂 uboot 启动时，只能使用一个 ubi 分区存放固件，固件总体积（含 kernel+rootfs+rootfs_data）将限制在 36M 内，但你仍然可以使用 plugin 分区（36M）存放其它数据<br> <a href="https://cmi.hanwckf.top/p/360t7-telnet-uboot-console/"> &gt;&gt;&gt;&gt;来源 </a></p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="openwrt" scheme="https://wangqifei.eu.org/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>windows系统安装推荐</title>
    <link href="https://wangqifei.eu.org/2023/06/08/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%8E%A8%E8%8D%90/"/>
    <id>https://wangqifei.eu.org/2023/06/08/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%8E%A8%E8%8D%90/</id>
    <published>2023-06-08T05:47:17.000Z</published>
    <updated>2023-06-08T05:48:21.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tiny-win11-x2F-Tiny-win10-–NTDEV"><a href="#Tiny-win11-x2F-Tiny-win10-–NTDEV" class="headerlink" title="Tiny win11 &#x2F; Tiny win10 –NTDEV"></a>Tiny win11 &#x2F; Tiny win10 –NTDEV</h2><p>前段时间</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="windows" scheme="https://wangqifei.eu.org/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>不使用MicrosoftStore安装Winget</title>
    <link href="https://wangqifei.eu.org/2023/06/08/%E4%B8%8D%E4%BD%BF%E7%94%A8MicrosoftStore%E5%AE%89%E8%A3%85Winget/"/>
    <id>https://wangqifei.eu.org/2023/06/08/%E4%B8%8D%E4%BD%BF%E7%94%A8MicrosoftStore%E5%AE%89%E8%A3%85Winget/</id>
    <published>2023-06-08T05:39:38.000Z</published>
    <updated>2023-06-08T05:55:15.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="winget"><a href="#winget" class="headerlink" title="winget"></a>winget</h2><p>winget 是优秀的 windows 端的软件管理工具，可以通过 MicrosoftStore 很便捷的安装，只是我在安装 win 的时候使用 Tiny10 安装了个 Windows 10 IoT 企业版 LTSC,没有 MicrosoftStore。以下是解决方案：<br>运行 powershell 执行以下命令</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span>-PSRepository -<span class="type">Name</span> <span class="string">&#x27;PSGallery&#x27;</span> -InstallationPolicy <span class="keyword">Trusted</span></span><br><span class="line">Install-Script -<span class="type">Name</span> winget-install -Force</span><br><span class="line">winget-install.ps1</span><br></pre></td></tr></table></figure><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>如果你的 powershell 运行提示：because running scripts is disabled on this system’需要先解决这个报错。<br>报错原因是：powershell 中默认的 execution policy 是 restricted。可以使用 Get-ExecutionPolicy 查看其状态。<br>解决方案：设置 execution policy 为 remotesigned<br>PowerShell 执行以下命令：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span>-ExecutionPolicy <span class="comment">RemoteSigned</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="windows" scheme="https://wangqifei.eu.org/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>SpotifyPremium实现</title>
    <link href="https://wangqifei.eu.org/2023/06/06/SpotifyPremium%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wangqifei.eu.org/2023/06/06/SpotifyPremium%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-06-06T09:12:39.000Z</published>
    <updated>2023-06-06T09:29:52.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要实现以下功能："><a href="#主要实现以下功能：" class="headerlink" title="主要实现以下功能："></a>主要实现以下功能：</h2><ol><li>去广告</li><li>去除 14 天检测</li><li><a href="/Spotify%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91%E5%AE%9E%E7%8E%B0.md">歌词翻译</a>（新版本虽已经引入，但效果欠佳）</li></ol><h2 id="实现方案："><a href="#实现方案：" class="headerlink" title="实现方案："></a><strong>实现方案：</strong></h2><p><strong>A:Spotify Premium</strong></p><p>B:Sprotify 脚本</p><p>Surge&#x2F;Loon&#x2F;Quantumult X&#x2F;ShadowRocketS 等网络调试工具+脚本文件+百度翻译 api</p><p><a href="https://apps.apple.com/us/app/loon/id1373567447">Loon</a> | <a href="https://github.com/fqw000/tools/blob/main/script/spotifypremium.js">spotifypremium 脚本</a> | <a href="https://github.com/fqw000/tools/blob/main/script/spotifylyric.js">spotifylyric 脚本</a></p><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a><strong>效果</strong>：</h2><ul><li><p>无广告、可保持更新、自由切歌、不用再考虑境外支付问题。</p></li><li><p>我是账号归属和日常使用网络环境均为同区，但 Spotify 的所有流量走的都是国内直连，几乎没出现过 14 天的问题。</p></li><li><p>非中文歌词均可逐行翻译成中文。</p></li></ul><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项：</strong></h2>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="Spotify" scheme="https://wangqifei.eu.org/tags/Spotify/"/>
    
  </entry>
  
  <entry>
    <title>Spotify歌词翻译实现</title>
    <link href="https://wangqifei.eu.org/2023/06/06/Spotify%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wangqifei.eu.org/2023/06/06/Spotify%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-06-06T09:08:43.000Z</published>
    <updated>2023-07-08T06:35:21.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h2><ul><li>·<strong>注册百度翻译个人开发者，然后申请百度翻译的 appid 和 key。接下来要在脚本文件里使用</strong>。<br>建议申请高级版，标准版可能不够用。</li><li><strong>使用网络工具配置 mitm 域名：</strong><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hostname</span> <span class="string">=spclient.wg.spotify.com</span></span><br></pre></td></tr></table></figure></li><li>使用网络工具配置脚本文件（注意将其中的 appid 和 securityKey 替换为自己的），不同软件配置不同参考以下内容：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http-response</span> <span class="string">^https:\/\/spclient\.wg\.spotify\.com\/color-lyrics\/v2\/track\/</span> <span class="string">script-path=[https://raw.githubusercontent.com/fqw000/tools/main/s](https://raw.githubusercontent.com/fqw000/tools/main/rule/liby.list)cript/spotifylyric.js,</span> <span class="string">requires-body=true,</span> <span class="string">binary-body-mode=true,</span> <span class="string">timeout=10,</span> <span class="string">tag=Spotify歌词翻译,</span> <span class="string">argument=appid=xx&amp;securityKey=xxx</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>开启 mitm 和脚本即可正常使用</strong></p><p>#脚本来源 app2smile</p><h2 id="插件版："><a href="#插件版：" class="headerlink" title="插件版："></a>插件版：</h2><p>plugin:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!name= spotify 歌词</span></span><br><span class="line"><span class="comment">#!desc= 显示翻译按钮，手动翻译，不能随歌词滚动翻译。换行翻译。</span></span><br><span class="line">[Mitm]</span><br><span class="line">hostname =spclient.wg.spotify.com</span><br><span class="line"></span><br><span class="line">[Script]</span><br><span class="line">http-response ^https:\/\/spclient\.wg\.spotify\.com\/color-lyrics\/v2\/track\/ script-path=[https://raw.githubusercontent.com/fqw000/tools/main/s](https://raw.githubusercontent.com/fqw000/tools/main/rule/liby.list)cript/spotifylyric.js, requires-body=<span class="literal">true</span>, binary-body-mode=<span class="literal">true</span>, <span class="built_in">timeout</span>=10, tag=Spotify歌词翻译, argument=appid=xx&amp;securityKey=xxx</span><br></pre></td></tr></table></figure><p>sgmodule:</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!name= spotify 歌词</span></span><br><span class="line"><span class="meta">#!desc= 显示翻译按钮，手动翻译，不能随歌词滚动翻译。换行翻译。</span></span><br><span class="line">[MITM]</span><br><span class="line">hostname = %APPEND% spclient.wg.spotify.com</span><br><span class="line">[Script]</span><br><span class="line"># 可调整为本地插件，修改下方argument中的appid和securityKey,填入自己的appid和密钥</span><br><span class="line"># 旧版自动随歌词滚动显示，原歌词同行显示，使用这个脚本： https:<span class="comment">//raw.githubusercontent.com/fqw000/tools/main/script/spotifyLyricBak.js</span></span><br><span class="line">spotify歌词翻译 = type=http-response,pattern=^https:\/\/spclient\.wg\.spotify\.com\/color-lyrics\/v2\/track\/,requires-<span class="keyword">body</span>=<span class="number">1</span>,binary-<span class="keyword">body</span>-mode=<span class="number">1</span>,max-size=<span class="number">0</span>,script-path=https:<span class="comment">//raw.githubusercontent.com/app2smile/rules/master/js/spotify-lyric.js,argument=appid=XXX&amp;securityKey=XXX</span></span><br></pre></td></tr></table></figure><h2 id="Spotify-歌词翻译使用百度翻译-api-的几点注意事项"><a href="#Spotify-歌词翻译使用百度翻译-api-的几点注意事项" class="headerlink" title="Spotify 歌词翻译使用百度翻译 api 的几点注意事项"></a>Spotify 歌词翻译使用百度翻译 api 的几点注意事项</h2><p>这两天发了 spotify 歌词翻译以后，部分网友私信协助其进行了配置，因为私信较多，可能在私信的过程中部分网友收到的代码里包含了我的百度翻译 api。今天发现欠费了……所以想给大家一些提示：</p><ul><li>流量<blockquote><p>通用翻译 API 标准版免费调用量调整为 5 万字符&#x2F;月，高级版免费调用量调整为 100 万字符&#x2F;月。<br>请选择 高级版，标准版可能不够用。<br>高级版比标准版相比要求多个了个人认证，需要身份证和手机号。</p></blockquote></li><li>费用<br>百度翻译是可以欠费的！采用的是次日结算的方式，欠费以后服务就被停用了，脚本无法使用翻译功能会提醒你检查 api 和 key 的配置。</li><li>必要设置<br>可以开通流量提醒、费用提醒。支持设置手机号和邮箱。</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="Spotify" scheme="https://wangqifei.eu.org/tags/Spotify/"/>
    
  </entry>
  
  <entry>
    <title>Git安装后右键没有git bash的解决方案</title>
    <link href="https://wangqifei.eu.org/2023/06/06/Git%E5%AE%89%E8%A3%85%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89git-bash%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://wangqifei.eu.org/2023/06/06/Git%E5%AE%89%E8%A3%85%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89git-bash%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2023-06-06T08:36:16.000Z</published>
    <updated>2023-06-06T08:41:29.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><blockquote><p>实现原理是使用注册表将 git bash 写入右键 1.将以下内容写入新建的.txt 文件。 2.修改.txt 为.reg。 3.双击点击运行。</p></blockquote><ul><li>文件内容：</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Windows</span> <span class="type">Registry</span> <span class="type">Editor</span> <span class="type">Version</span> <span class="number">5.00</span></span><br><span class="line">; <span class="type">Open</span> files</span><br><span class="line">; <span class="type">Default</span> <span class="type">Git</span><span class="operator">-</span><span class="type">Bash</span> <span class="type">Location</span> <span class="type">C</span>:\<span class="type">Program</span> <span class="type">Files</span>\<span class="type">Git</span>\git<span class="operator">-</span>bash.exe</span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="operator">*</span>\shell\<span class="type">Open</span> <span class="type">Git</span> <span class="type">Bash</span>]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;Open Git Bash&quot;</span></span><br><span class="line"><span class="string">&quot;Icon&quot;</span><span class="operator">=</span><span class="string">&quot;C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="operator">*</span>\shell\<span class="type">Open</span> <span class="type">Git</span> <span class="type">Bash</span>\command]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;<span class="subst">\&quot;</span>C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe<span class="subst">\&quot;</span> <span class="subst">\&quot;</span>--cd=%1<span class="subst">\&quot;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">; <span class="type">This</span> will make it appear when you right click <span class="type">ON</span> a folder</span><br><span class="line">; <span class="type">The</span> <span class="string">&quot;Icon&quot;</span> line can be removed <span class="keyword">if</span> you don&#x27;t want the icon to appear</span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="type">Directory</span>\shell\bash]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;Open Git Bash&quot;</span></span><br><span class="line"><span class="string">&quot;Icon&quot;</span><span class="operator">=</span><span class="string">&quot;C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="type">Directory</span>\shell\bash\command]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;<span class="subst">\&quot;</span>C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe<span class="subst">\&quot;</span> <span class="subst">\&quot;</span>--cd=%1<span class="subst">\&quot;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">; <span class="type">This</span> will make it appear when you right click <span class="type">INSIDE</span> a folder</span><br><span class="line">; <span class="type">The</span> <span class="string">&quot;Icon&quot;</span> line can be removed <span class="keyword">if</span> you don&#x27;t want the icon to appear</span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="type">Directory</span>\<span class="type">Background</span>\shell\bash]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;Open Git Bash&quot;</span></span><br><span class="line"><span class="string">&quot;Icon&quot;</span><span class="operator">=</span><span class="string">&quot;C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">HKEY_CLASSES_ROOT</span>\<span class="type">Directory</span>\<span class="type">Background</span>\shell\bash\command]</span><br><span class="line">@<span class="operator">=</span><span class="string">&quot;<span class="subst">\&quot;</span>C:<span class="subst">\\</span>Program Files<span class="subst">\\</span>Git<span class="subst">\\</span>git-bash.exe<span class="subst">\&quot;</span> <span class="subst">\&quot;</span>--cd=%v.<span class="subst">\&quot;</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="DEV" scheme="https://wangqifei.eu.org/tags/DEV/"/>
    
  </entry>
  
  <entry>
    <title>ADB</title>
    <link href="https://wangqifei.eu.org/2023/06/06/ADB/"/>
    <id>https://wangqifei.eu.org/2023/06/06/ADB/</id>
    <published>2023-06-06T08:33:17.000Z</published>
    <updated>2023-06-06T09:35:42.712Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://juejin.cn/post/6844903645289398280#heading-15">ADB 操作命令详解及用法大全</a></p><p>下载解压 adb android-platform-tools</p><h2 id="配置环境变量："><a href="#配置环境变量：" class="headerlink" title="配置环境变量："></a>配置环境变量：</h2><table><thead><tr><th>zsh</th><th>.zshrc</th><th>home path</th></tr></thead></table><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><table><thead><tr><th>cmd</th><th>usage</th><th>cmd</th><th>usage</th><th>cmd</th><th>usage</th></tr></thead><tbody><tr><td>adb version</td><td>查看版本号</td><td>adb start-server</td><td>启动 adb 服务</td><td>adb kill-server</td><td>终止 adb 服务</td></tr><tr><td>adb devices</td><td>连接的设备</td><td>adb root</td><td>以 root 身份使用 adb</td><td>adb -p <port> start-server</td><td>指定 adb 端口，默认 5037</td></tr><tr><td>adb connect:port</td><td>通过制定端口连接制定 ip 的机器</td><td>adb disconnect</td><td>断开链接</td><td>adb usb</td><td>以 usb 模式重新启动 adb</td></tr></tbody></table><h2 id="应用管理"><a href="#应用管理" class="headerlink" title="应用管理"></a>应用管理</h2><p>查看</p><p>adb shell pm list packages [options]</p><table><thead><tr><th>参数</th><th>显示</th></tr></thead><tbody><tr><td>-f</td><td>显示应用关联的 apk 文件</td></tr><tr><td>-d</td><td>显示 disable 的应用</td></tr><tr><td>-e</td><td>显示 enabled 的应用</td></tr><tr><td>-s</td><td>显示系统应用</td></tr><tr><td>-3</td><td>显示第三方应用</td></tr><tr><td>-i</td><td>显示应用的 installer</td></tr><tr><td>-u</td><td>包含已卸载应用</td></tr><tr><td><filter></td><td>包含制定字符的应用</td></tr><tr><td>无</td><td>所有应用</td></tr></tbody></table><p>安装</p><p>adb install <package-name></p><p>安装文件需要放置在当前目录下</p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>-l</td><td>安装到保护目录&#x2F;mnt&#x2F;asec</td></tr><tr><td>-r</td><td>允许覆盖安装</td></tr><tr><td>-t</td><td>允许安装 androidManifest.xml 里的 application 指定 android：testOnly&#x3D;ture 的应用</td></tr><tr><td>-s</td><td>将应用安装到 sdcard</td></tr><tr><td>-d</td><td>允许降级覆盖安装</td></tr><tr><td>-g</td><td>授予运行时到权限</td></tr></tbody></table><p>卸载</p><p>adb uninstall [-k] [package-name]</p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>-k</td><td>卸载时保留数据和缓存目录</td></tr></tbody></table><p>清除应用数据和缓存</p><p>adb shell pm clear <package-name></p><p>查看应用安装路径</p><p>adb shell pm path <package-name></p><p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;查看前台 activity</p><p>adb shell dumpsys activity activities | grep moucusedActivity</p><p>查看正在运行的 services</p><p>adb shell dumpsys activity services <package-name></p><p>adb shell dumpsys activity services</p><p>查看应用详细信息</p><p>adb shell dumpsys package <package-name></p><p>启动应用</p><p>adb shell am start <package-name></p><p>adb shell am start <package-name>&#x2F;.Activity(需要启动的 activity)</p><p>交互</p><p>强制停止应用</p><p>adb shell am force-stop <package-name></p><p>收紧内存</p><p>adb shell am send-trim-memory <pid> <level></p><p>pid:进程 id</p><p>level：HIDDEN RUNNING_MODERATE BACKGROUND RUNING_LOW MODERATE RUNNING_CRITICAL COMPLETE</p><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><p>从设备下载文件到本地</p><p>adb pull <remote> [local]</p><p>remote：模拟器&#x2F;设备的文件路径</p><p>local：本地路径，留空默认即当前目录</p><p>将本地文件推送到设备</p><p>adb push <local> [remote]</p><p>列出制定目录的内容</p><p>adb shell ls [option] <directory></p><p>directory:制定目录，省略即当前</p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>无</td><td>所有文件和目录</td></tr><tr><td>-a</td><td>所有文件包括隐藏</td></tr><tr><td>-i</td><td>所有文件和索引编号</td></tr><tr><td>-s</td><td>所有文件和文件大小</td></tr><tr><td>-n</td><td>所有文件和 uid gid</td></tr><tr><td>-R</td><td>所有子目录的文件</td></tr></tbody></table><p>切换到目录</p><p>adb shell cd <directory></p><p>删除</p><p>adb shell rm [iptions] &lt;file&#x2F;directory&gt;</p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>无</td><td>删除文件</td></tr><tr><td>-f</td><td>强制删除，不提示</td></tr><tr><td>-r</td><td>强制删除制定目录下的所有内容</td></tr><tr><td>-d</td><td>删除指定目录，等同于 rmdir</td></tr><tr><td>-i</td><td>交互删除，删除前提示</td></tr></tbody></table><p>创建目录</p><p>adb shell mkdir [options] <directory-name></p><p>同样类型的 adb shel 命令有</p><p>pwd</p><p>cp</p><p>mv</p><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><p>网络信息查看</p><p>adb shell netstat</p><p>将网络信息输出到制定文件</p><p>adb shell netstat&gt;<file-path></p><p>ping</p><p>adb shell ping destination</p><p>查看 ip</p><p>adb shell ifconfig | grep Mask</p><p>如果不行，使用一下命令：</p><p>adb shell netcfg</p><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><p>菜单</p><p>adb shell input keyevent 82</p><p>home 键</p><p>adb shell input keyevent 3</p><p>返回键</p><p>adb shell input keyevent 4</p><p>静音</p><p>adb shell input keyevent 164</p><p>亮屏</p><p>adb shell input keyevent 224</p><p>关屏</p><p>adb shell input keyevent 223</p><p>滑动解锁</p><p>adb shell input swipe 300 1000 300 500</p><p>300 1000 300 500 代表起点 x 坐标 起点 y 坐标 结束 x 坐标 结束 y 坐标</p><p>焦点处于文本框时输入文本</p><p>adb shell input text &lt;输入内容&gt;</p><p>（英文输入法下可输入英文，中文异常）</p><h2 id="日志及其他"><a href="#日志及其他" class="headerlink" title="日志及其他"></a>日志及其他</h2><p>清空日志</p><p>adb logcat -c</p><p>显示日志在控制台</p><p>adb logcat -d</p><p>查看电池状况</p><p>adb shell dumpsys battery</p><p>查看分辨率</p><p>adb shell wm size</p><p>查看屏幕密度</p><p>adb shell wm density</p><p>查看屏幕参数</p><p>adb shell dumpsys window displays</p><p>查看设备 android id</p><p>adb shell settings get secure android_id</p><p>查看 android 系统版本</p><p>adb shell getprop ro.build.version.release</p><p>查看 mac 地址</p><p>adb shell cat &#x2F;sys&#x2F;class&#x2F;net&#x2F;wan0&#x2F;address</p><p>截图</p><p>adb exec-out screencap -p &gt; sc.png</p><p>重启</p><p>adb reboot</p><p>查看当前 activity</p><p>adb shell dumpsys activity activities | grep mResumedActivity</p><p>》〉》〉华为后台调用 activity</p><p>om.huawei.android.launcher&#x2F;.quickstep.RecentsActivit</p><p>adb 调起多任务管理</p><p>adb shell am start -n com.huawei.android.launcher&#x2F;.quickstep.RecentsActivity</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="DEV" scheme="https://wangqifei.eu.org/tags/DEV/"/>
    
  </entry>
  
  <entry>
    <title>Regex 正则表达式</title>
    <link href="https://wangqifei.eu.org/2023/06/06/Regex-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://wangqifei.eu.org/2023/06/06/Regex-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2023-06-06T08:16:34.000Z</published>
    <updated>2023-06-06T08:32:22.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RegularExpression"><a href="#RegularExpression" class="headerlink" title="RegularExpression"></a>RegularExpression</h2><p>Regux &#x2F; Reguxp</p><h2 id="语法构成"><a href="#语法构成" class="headerlink" title="语法构成"></a>语法构成</h2><h3 id="普通字符"><a href="#普通字符" class="headerlink" title="普通字符"></a>普通字符</h3><p>涵盖：大小写字母、数字、标点、特殊符号</p><table><thead><tr><th>打印字符</th><th>描述</th></tr></thead><tbody><tr><td>abc</td><td>匹配所有字符中的 abc。注意与[abc]的区别</td></tr><tr><td>[abc]</td><td>字符簇。匹配所有字符中单个的 a、b 或 c。[a | b | c]</td></tr><tr><td>[a-z]</td><td>字符簇。匹配所有字符中的任一小写字母。</td></tr><tr><td>[A-Z]</td><td>字符簇。 匹配所有字符中的任一大写字母。</td></tr><tr><td>[0-9]</td><td>字符簇。 匹配所有字符中的任一数字。</td></tr><tr><td>[^abc]</td><td>字符簇。匹配所有字符中非的 a、b 或 c。</td></tr><tr><td>.</td><td>匹配除换行(\n、\r)之外的任一字符。[^\n\r]</td></tr><tr><td>[\s]</td><td>匹配所有的空白字符包括换行符、空格、制表符、换页符等。</td></tr><tr><td>[\S]</td><td>匹配所有的非空白字符不包括换行符、制表符、换页符。[^\f\n\r\t\v]</td></tr><tr><td>[\w]</td><td>匹配任一数字、字母、下划线 。[0-9a-zA-Z_]</td></tr><tr><td>[\W]</td><td>匹配任一非单词字符。[^0-9a-zA-Z_]</td></tr><tr><td>[\d]</td><td>匹配任一数字字符。[0-9]</td></tr><tr><td>[\D]</td><td>匹配任一非数字字符，包括字母、空格、下划线。[^0-9]</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><table><thead><tr><th>非打印字符</th><th>描述</th></tr></thead><tbody><tr><td>\cx</td><td>匹配为 x 字母的控制字符。x 可以是任一字母。</td></tr><tr><td>\f</td><td>匹配一个换页符。\x0c 、\cL</td></tr><tr><td>\n</td><td>匹配一个换行符。</td></tr><tr><td>\r</td><td>匹配一个回车符。</td></tr><tr><td>\t</td><td>匹配一个制表符。</td></tr><tr><td>\v</td><td>匹配一个垂直制表符。</td></tr><tr><td>\num</td><td>匹配正整数 num，对所获取的匹配的引用。</td></tr></tbody></table><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><table><thead><tr><th>元字符</th><th>描述</th></tr></thead><tbody><tr><td>^</td><td>匹配整个字符串的开始位置。</td></tr><tr><td>$</td><td>匹配整个字符串的结束位置。</td></tr><tr><td>*</td><td>匹配前一个子表达式零次及以上。{0,}</td></tr><tr><td>+</td><td>匹配前一个子表达式一次及以上。{1,}</td></tr><tr><td>?</td><td>匹配前一个子表达式零次到一次。{0,1}</td></tr><tr><td>.</td><td>匹配除换行符之外的任一字符。</td></tr><tr><td>\</td><td>转义字符。将下一个字符标记为特殊字符、原意字符或向后引用，或八进制转义字符。</td></tr><tr><td>()</td><td>标记一个组（子表达式）。定义操作符的范围和有限级。选择项必须要放置在()中。</td></tr><tr><td>[</td><td>标记一个中括号表达式的开始。</td></tr><tr><td>]</td><td>标记一个中括号表达式的结束。</td></tr><tr><td>{</td><td>标记限定符表达式开始。</td></tr><tr><td>}</td><td>标记限定符表达式结束。</td></tr><tr><td>|</td><td>或。匹配前后两项中的任一个。优先级最低。</td></tr></tbody></table><h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><p>表述指定的<code>正则组件</code>必须出现的次数才符合匹配</p><table><thead><tr><th>限定符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配前一个子表达式零次及以上。{0,}</td></tr><tr><td>+</td><td>匹配前一个子表达式一次及以上。{1,}</td></tr><tr><td>？</td><td>匹配前一个子表达式零次到一次。{0,1}。跟在任一其他限定符后面时，表示匹配模式是非贪婪的，即尽可能少的匹配描述的字符串。</td></tr><tr><td>{n}</td><td>匹配前一个子表达式 n 次。</td></tr><tr><td>{n,}</td><td>匹配前一个子表达式 n 次及以上。</td></tr><tr><td>{n,m}</td><td>匹配前一个子表达式 n 次到 m 次。</td></tr></tbody></table><h3 id="定位符-锚点"><a href="#定位符-锚点" class="headerlink" title="定位符(锚点)"></a>定位符(锚点)</h3><table><thead><tr><th>定位符</th><th>描述</th></tr></thead><tbody><tr><td>^</td><td>匹配字符串的开始位置。</td></tr><tr><td>$</td><td>匹配字符串的结束位置。</td></tr><tr><td>\b</td><td>匹配一个单词的边界(wordboundary，A word boundary is a zero-width test between two characters)。匹配字符与空格之间的位置。即匹配前一个子表达式且在单词的收尾或开头(取决于\b 放置的位置)</td></tr><tr><td>\B</td><td>匹配非单词的边界。匹配单词间字符与字符之间的边界。即匹配前一个子表达式且前一个表达式不能在字符串的收尾或开头(取决于\B 放置的位置)</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="组与引用"><a href="#组与引用" class="headerlink" title="组与引用"></a>组与引用</h3><p>（）表示捕获分组</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>()</td><td>捕获分组，把每个分组里匹配的值保存起来，多个可通过用 n 表示组的序号来查看</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h3><table><thead><tr><th>非捕获元</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>非捕获组，创建无法引用的分组。</td></tr><tr><td>(?&#x3D;pattern)</td><td>正向预查，在任何开始匹配圆括号内表达式的位置查询。匹配的元素后方紧跟着需要有能匹配括号内表达式匹配到的元素。</td></tr><tr><td>(?!pattern)</td><td>正向否定预查。在任何不匹配该表达式的位置查询。匹配到的元素后方紧跟着的不能含有括号内表达式匹配的元素。</td></tr><tr><td>(?&lt;&#x3D;pattern)</td><td>反向肯定预查。匹配元素的前一个元素是括号表达式陪陪的元素。</td></tr><tr><td>(?&lt;!&#x3D;pattern)</td><td>反向否定预查。匹配元素的前一个元素不能是括号表达式陪陪的元素。</td></tr></tbody></table><table><thead><tr><th>示例</th><th>描述</th></tr></thead><tbody><tr><td>r(?&#x3D;e)</td><td>匹配单词中后面有 e 的 r</td></tr><tr><td>r(?!e)</td><td>匹配单词中后面没有 e 的 r</td></tr><tr><td>(?&lt;&#x3D;e)r</td><td>匹配前面有 e 的 r</td></tr><tr><td>(?&lt;!&#x3D;e)r</td><td>匹配前面没有 e 的 r</td></tr></tbody></table><h3 id="flags-标志"><a href="#flags-标志" class="headerlink" title="flags 标志"></a>flags 标志</h3><p>flags 放置在 pattern 的后面，可以是多个 flags 同时使用。</p><table><thead><tr><th>标志</th><th>描述</th></tr></thead><tbody><tr><td>i</td><td>忽略大小写。</td></tr><tr><td>g</td><td>全局查找，确保表达式不会在第一个匹配项时停止。</td></tr><tr><td>m</td><td>多行查找，不启用^和$只匹配整个字符串的开始和结束，而不会单独匹配每一行。</td></tr><tr><td>s</td><td>默认.匹配的是除换行\n 以外的任一字符，加上 s 后.可以匹配包括换行在內的任一字符。</td></tr></tbody></table><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><table><thead><tr><th>优先级</th><th>符号</th></tr></thead><tbody><tr><td>最高</td><td>\</td></tr><tr><td>高</td><td>()、(?:)、(?&#x3D;)、[]</td></tr><tr><td>中</td><td>*、+、?、{n}、{n,}、{n,m}</td></tr><tr><td>低</td><td>^、$、中介字符</td></tr><tr><td>次低</td><td>串联。相邻的字符连接在一起</td></tr><tr><td>最低</td><td>｜</td></tr></tbody></table><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9e06eed0-cf1c-44e7-a0bc-aee4e33945f9/Untitled.png" alt="正则表达的解析"></p><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>shell 的 sed 不支持、\d、\D、零宽断言，且 sed 下的正则表达没有懒惰模式，都是贪婪模式。</p><h2 id="Per"><a href="#Per" class="headerlink" title="Per"></a>Per</h2><p>可更好的替代 sed 使用。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="DEV" scheme="https://wangqifei.eu.org/tags/DEV/"/>
    
  </entry>
  
</feed>
